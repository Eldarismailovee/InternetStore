"""
Django settings for InternetMagazin project.

Generated by 'django-admin startproject' using Django 5.1.3.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""
import os
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-va(&7$@^993mz&cut*iw@%fbo+_(+*kof)e0%g6%kbb42o7-@i'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

USE_TZ = True
TIME_ZONE = 'UTC'

ALLOWED_HOSTS = [
]

# Application definition

INSTALLED_APPS = [
    'jazzmin',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'accounts',
    #'two_factor',
    # 'django_otp',
    #  'django_otp.plugins.otp_totp',
    'django.contrib.staticfiles',
    'products.apps.ProductsConfig',
    'django_ckeditor_5',
    'django_filters',
    'crispy_forms',
    'debug_toolbar',
    'crispy_bootstrap5',
    'imagekit',
    'widget_tweaks',
]

JAZZMIN_SETTINGS = {
    "site_title": "Electronic Store Admin",
    "site_header": "Electronic Store",
    "site_brand": "Electronic Store",
    "welcome_sign": "Добро пожаловать в административную панель",
    "copyright": "Electronic Store",
    # Другие настройки...
}

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    #    'django_otp.middleware.OTPMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'debug_toolbar.middleware.DebugToolbarMiddleware',
    'accounts.middleware.TimezoneMiddleware',
    'accounts.middleware.LastActivityMiddleware',
]

ROOT_URLCONF = 'InternetStore.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates']
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'products.context_processors.cart_total_amount',
                'products.context_processors.current_year',
                'accounts.context_processors.auth_forms',
            ],
        },
    },
]

WSGI_APPLICATION = 'InternetStore.wsgi.application'

# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
        'OPTIONS': {'min_length': 8},
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'ru'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'
STATICFILES_DIRS = [os.path.join(BASE_DIR, 'static')]

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
#CKEDITOR_5_CUSTOM_CSS = 'path/to/your/custom.css'

# settings.py

CKEDITOR_5_CONFIGS = {
    'default': {
        'toolbar': {
            'items': [
                'heading',
                '|',
                'bold',
                'italic',
                'underline',
                'strikethrough',
                'link',
                'bulletedList',
                'numberedList',
                'blockQuote',
                '|',
                'fontSize',
                'fontColor',
                'fontBackgroundColor',
                'highlight',
                'alignment',
                '|',
                'insertTable',
                'mediaEmbed',
                'insertImage',
                'insertVideo',
                'codeBlock',
                'codeSnippet',          # Добавлен инструмент Code Snippet
                '|',
                'undo',
                'redo',
                # Добавьте другие инструменты по необходимости
            ],
        },
        'heading': {
            'options': [
                {'model': 'paragraph', 'title': 'Параграф', 'class': 'ck-heading_paragraph'},
                {'model': 'heading1', 'view': 'h1', 'title': 'Заголовок 1', 'class': 'ck-heading_heading1'},
                {'model': 'heading2', 'view': 'h2', 'title': 'Заголовок 2', 'class': 'ck-heading_heading2'},
                # Добавьте другие уровни заголовков по необходимости
            ]
        },
        'language': 'ru',  # Устанавливаем русский язык
        'image': {
            'toolbar': [
                'imageStyle:full',
                'imageStyle:side',
                '|',
                'imageTextAlternative',
                'imageStyle:inline',
                'imageStyle:block',
                'imageStyle:alignLeft',
                'imageStyle:alignRight'
            ]
        },
        'table': {
            'contentToolbar': [
                'tableColumn',
                'tableRow',
                'mergeTableCells',
                'tableCellProperties',
                'tableProperties'
            ]
        },
        'mediaEmbed': {
            'previewsInData': True,
        },
        'fontSize': {
            'options': [
                9, 11, 13, 'default', 17, 19, 21
            ],
            'supportAllValues': False
        },
        'fontColor': {
            'colors': [
                {'color': 'hsl(0, 0%, 0%)', 'label': 'Черный'},
                {'color': 'hsl(0, 0%, 30%)', 'label': 'Темно-серый'},
                {'color': 'hsl(0, 0%, 60%)', 'label': 'Серый'},
                {'color': 'hsl(0, 0%, 90%)', 'label': 'Светло-серый'},
                {'color': 'hsl(0, 75%, 60%)', 'label': 'Красный'},
                {'color': 'hsl(30, 75%, 60%)', 'label': 'Оранжевый'},
                {'color': 'hsl(60, 75%, 60%)', 'label': 'Желтый'},
                {'color': 'hsl(120, 75%, 60%)', 'label': 'Зеленый'},
                {'color': 'hsl(180, 75%, 60%)', 'label': 'Голубой'},
                {'color': 'hsl(240, 75%, 60%)', 'label': 'Синий'},
                {'color': 'hsl(300, 75%, 60%)', 'label': 'Фиолетовый'}
            ],
            'columns': 5,
            'documentColors': 10,
            'enableAutomaticImport': True
        },
        'fontBackgroundColor': {
            'colors': [
                {'color': 'hsl(0, 0%, 0%)', 'label': 'Черный'},
                {'color': 'hsl(0, 0%, 30%)', 'label': 'Темно-серый'},
                {'color': 'hsl(0, 0%, 60%)', 'label': 'Серый'},
                {'color': 'hsl(0, 0%, 90%)', 'label': 'Светло-серый'},
                {'color': 'hsl(0, 75%, 60%)', 'label': 'Красный'},
                {'color': 'hsl(30, 75%, 60%)', 'label': 'Оранжевый'},
                {'color': 'hsl(60, 75%, 60%)', 'label': 'Желтый'},
                {'color': 'hsl(120, 75%, 60%)', 'label': 'Зеленый'},
                {'color': 'hsl(180, 75%, 60%)', 'label': 'Голубой'},
                {'color': 'hsl(240, 75%, 60%)', 'label': 'Синий'},
                {'color': 'hsl(300, 75%, 60%)', 'label': 'Фиолетовый'}
            ],
            'columns': 5,
            'documentColors': 10,
            'enableAutomaticImport': True
        },
        'alignment': {
            'options': ['left', 'center', 'right', 'justify']
        },
        'codeBlock': {
            'language': [
                {'language': 'plaintext', 'label': 'Plain text'},
                {'language': 'javascript', 'label': 'JavaScript'},
                {'language': 'python', 'label': 'Python'},
                {'language': 'ruby', 'label': 'Ruby'},
                {'language': 'php', 'label': 'PHP'},
                # Добавьте другие языки по необходимости
            ]
        },
        'codeSnippet': {  # Настройки для плагина Code Snippet
            'languages': [
                {'language': 'plaintext', 'label': 'Plain text'},
                {'language': 'javascript', 'label': 'JavaScript'},
                {'language': 'python', 'label': 'Python'},
                {'language': 'ruby', 'label': 'Ruby'},
                {'language': 'php', 'label': 'PHP'},
                # Добавьте другие языки по необходимости
            ]
        },
        # Дополнительные настройки по необходимости
    },
}


DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

LOGIN_REDIRECT_URL = 'home'
LOGOUT_REDIRECT_URL = 'home'
LOGIN_URL = 'login'

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'  # или ваш SMTP-сервер
EMAIL_PORT = 587  # или порт вашего SMTP-сервера
EMAIL_USE_TLS = True
EMAIL_HOST_USER = 'fgghyk51@gmail.com'  # ваш email
EMAIL_HOST_PASSWORD = 'your_email_password'  # пароль от вашего email
DEFAULT_FROM_EMAIL = 'Название сайта <noreplyelectronicstore@gmail.com>'

CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.locmem.LocMemCache',
        'LOCATION': 'unique-snowflake',
    }
}

INTERNAL_IPS = [
    '127.0.0.1',
]

CRISPY_ALLOWED_TEMPLATE_PACKS = "bootstrap5"
CRISPY_TEMPLATE_PACK = "bootstrap5"

BASE_DIR = Path(__file__).resolve().parent.parent

LOG_DIR = os.path.join(BASE_DIR, 'logs')
os.makedirs(LOG_DIR, exist_ok=True)

SESSION_COOKIE_AGE=3600

SESSION_SAVE_EVERY_REQUEST=True


LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '{levelname} {asctime} {module} {process:d} {thread:d} {message}',
            'style': '{',
        },
        'simple': {
            'format': '{levelname} {message}',
            'style': '{',
        },
    },
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
            'formatter': 'simple',
        },
        'debug_file': {
            'level': 'DEBUG',
            'class': 'logging.handlers.RotatingFileHandler',
            'filename': os.path.join(LOG_DIR, 'debug.log'),
            'maxBytes': 1024 * 1024 * 5,  # 5 MB
            'backupCount': 5,
            'formatter': 'verbose',
        },
        'error_file': {
            'level': 'ERROR',
            'class': 'logging.handlers.RotatingFileHandler',
            'filename': os.path.join(LOG_DIR, 'error.log'),
            'maxBytes': 1024 * 1024 * 10,  # 10 MB
            'backupCount': 5,
            'formatter': 'verbose',
        },
    },
    'loggers': {
        'django': {
            'handlers': ['console', 'debug_file', 'error_file'],
            'level': os.getenv('DJANGO_LOG_LEVEL', 'INFO'),
            'propagate': False,
        },
        'django.request': {
            'handlers': ['error_file'],
            'level': 'ERROR',
            'propagate': False,
        },
        'django.security': {
            'handlers': ['error_file'],
            'level': 'ERROR',
            'propagate': False,
        },
    },
    'root': {
        'handlers': ['console', 'debug_file', 'error_file'],
        'level': 'WARNING',
    },

}


